/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Pathway as PrismaPathway } from "@prisma/client";

export class PathwayServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.PathwayCountArgs, "select">): Promise<number> {
    return this.prisma.pathway.count(args);
  }

  async pathways(args: Prisma.PathwayFindManyArgs): Promise<PrismaPathway[]> {
    return this.prisma.pathway.findMany(args);
  }
  async pathway(
    args: Prisma.PathwayFindUniqueArgs
  ): Promise<PrismaPathway | null> {
    return this.prisma.pathway.findUnique(args);
  }
  async createPathway(args: Prisma.PathwayCreateArgs): Promise<PrismaPathway> {
    return this.prisma.pathway.create(args);
  }
  async updatePathway(args: Prisma.PathwayUpdateArgs): Promise<PrismaPathway> {
    return this.prisma.pathway.update(args);
  }
  async deletePathway(args: Prisma.PathwayDeleteArgs): Promise<PrismaPathway> {
    return this.prisma.pathway.delete(args);
  }
}
